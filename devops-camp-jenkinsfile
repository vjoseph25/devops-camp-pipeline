pipeline {
    agent {
        label 'jenkins-agent'
    }

    environment {
        PIPELINE_HASH = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
        HARBOR_REGISTRY = 'harbor.dev.afsmtddso.com'
        HARBOR_PROJECT = 'vjoseph-harbor-project'   
        APP_IMAGE_NAME = 'app'
    }

    stages {
        stage('Application repository') {
            steps {
                echo "Cloning application repository"
                sh 'git clone https://github.com/vjoseph25/afs-labs-student.git'
		dir('afs-labs-student') {
		    script {
		        env.APP_HASH = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
		    }
		}
            }
        }
        stage('Application docker build') {
            steps {
                echo "Building application image"
		withCredentials([usernameColonPassword(credentialsId: 'vjoseph-harbor-auth', variable: 'HARBOR-AUTH')]) {
		    script {
		        docker.build('$APP_IMAGE_NAME-$APP_HASH', '-f ./app/Dockerfile ./afs-labs-student')
		        docker.withRegistry('https://$HARBOR_REGISTRY', 'vjoseph-harbor-auth') {
			    sh 'docker tag $APP_IMAGE_NAME-$APP_HASH $HARBOR_REGISTRY/$HARBOR_PROJECT/$APP_IMAGE_NAME:$APP_HASH-$PIPELINE_HASH'
			    sh 'docker push $HARBOR_REGISTRY/$HARBOR_PROJECT/$APP_IMAGE_NAME:$APP_HASH-$PIPELINE_HASH'
			}
		    }
                }
            }
            post {
                always {
                    echo "Clean local $APP_IMAGE_NAME image"
                    script {
                        try {
                            sh 'docker rmi $APP_IMAGE_NAME-$APP_HASH:latest'
                            sh 'docker rmi $HARBOR_REGISTRY/$HARBOR_PROJECT/$APP_IMAGE_NAME:$APP_HASH-$PIPELINE_HASH'                            
                        } catch (err) {
                            echo err.getMessage()
                        }
                    }
                }
            }
        }
        stage('Test'){
            steps {
                echo "Testing stage"
            }
        }
        stage('Deploy') {
            steps {
                echo "Deployment stage"
		sh 'kubectl -n vjoseph set image deployment/app-deployment --record=true app-deployment=$HARBOR_REGISTRY/$HARBOR_PROJECT/$APP_IMAGE_NAME:$APP_HASH-$PIPELINE_HASH'
            }
        }
    }
    post {
        cleanup {
            echo "Clean workspace"
            sh 'rm -rf .git ./*'
        }
    }
}
